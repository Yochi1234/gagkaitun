--[[
    @author Enhanced Auto-Farm for Grow a Garden
    @description Smart auto-farm with warp system and improved planting
    https://www.roblox.com/games/126884695634066
]]

--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Leaderstats = LocalPlayer.leaderstats
local Backpack = LocalPlayer.Backpack
local PlayerGui = LocalPlayer.PlayerGui

local ShecklesCount = Leaderstats.Sheckles

--// Folders
local GameEvents = ReplicatedStorage.GameEvents
local Farms = workspace.Farm

--// Progression System
local SeedProgression = {
    {name = "Carrot", price = 5, unlock = 0},
    {name = "Corn", price = 15, unlock = 100},
    {name = "Tomato", price = 25, unlock = 500},
    {name = "Potato", price = 40, unlock = 1000},
    {name = "Watermelon", price = 80, unlock = 2500},
    {name = "Pumpkin", price = 150, unlock = 5000},
    {name = "Blueberry", price = 300, unlock = 10000},
}

--// Global Variables
local IsRunning = false
local AutoEnabled = false
local MAX_BACKPACK_SIZE = 20
local MIN_CROPS_TO_SELL = 3

--// Warp Positions
local WarpPositions = {
    Sell = CFrame.new(62, 4, -26),
    Shop = CFrame.new(0, 4, 0), -- ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏£‡∏¥‡∏á
    Farm = nil -- ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠‡∏ü‡∏≤‡∏£‡πå‡∏°
}

--// Enhanced GUI
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local ToggleButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")
local InfoLabel = Instance.new("TextLabel")

ScreenGui.Name = "EnhancedAutoFarmGUI"
ScreenGui.Parent = game.CoreGui

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0, 10, 0, 10)
MainFrame.Size = UDim2.new(0, 220, 0, 130)

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = MainFrame

-- Add shadow effect
local shadow = Instance.new("Frame")
shadow.Name = "Shadow"
shadow.Parent = ScreenGui
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.7
shadow.BorderSizePixel = 0
shadow.Position = UDim2.new(0, 12, 0, 12)
shadow.Size = UDim2.new(0, 220, 0, 130)
shadow.ZIndex = -1

local shadowCorner = Instance.new("UICorner")
shadowCorner.CornerRadius = UDim.new(0, 10)
shadowCorner.Parent = shadow

ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = MainFrame
ToggleButton.BackgroundColor3 = Color3.fromRGB(46, 125, 50)
ToggleButton.Position = UDim2.new(0.05, 0, 0.15, 0)
ToggleButton.Size = UDim2.new(0.9, 0, 0.35, 0)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Text = "üöÄ START ENHANCED AUTO"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextScaled = true

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 8)
toggleCorner.Parent = ToggleButton

StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = MainFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0.05, 0, 0.55, 0)
StatusLabel.Size = UDim2.new(0.9, 0, 0.2, 0)
StatusLabel.Font = Enum.Font.GothamMedium
StatusLabel.Text = "üå± Ready to farm!"
StatusLabel.TextColor3 = Color3.fromRGB(76, 175, 80)
StatusLabel.TextScaled = true

InfoLabel.Name = "InfoLabel"
InfoLabel.Parent = MainFrame
InfoLabel.BackgroundTransparency = 1
InfoLabel.Position = UDim2.new(0.05, 0, 0.75, 0)
InfoLabel.Size = UDim2.new(0.9, 0, 0.2, 0)
InfoLabel.Font = Enum.Font.Gotham
InfoLabel.Text = "üí∞ $0 | üì¶ 0 crops"
InfoLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
InfoLabel.TextScaled = true

--// Enhanced Utility Functions
local function SmoothWarp(targetCFrame, speed)
    local Character = LocalPlayer.Character
    if not Character or not Character:FindFirstChild("HumanoidRootPart") then return end
    
    local HumanoidRootPart = Character.HumanoidRootPart
    local startCFrame = HumanoidRootPart.CFrame
    
    -- Instant warp for better performance
    HumanoidRootPart.CFrame = targetCFrame
    wait(0.2)
end

local function GetBestSeed()
    local money = ShecklesCount.Value
    local bestSeed = "Carrot"
    
    for i = #SeedProgression, 1, -1 do
        local seed = SeedProgression[i]
        if money >= seed.unlock then
            bestSeed = seed.name
            break
        end
    end
    
    return bestSeed
end

local function GetMyFarm()
    for _, Farm in pairs(Farms:GetChildren()) do
        if Farm:FindFirstChild("Important") and Farm.Important:FindFirstChild("Data") then
            local Owner = Farm.Important.Data:FindFirstChild("Owner")
            if Owner and Owner.Value == LocalPlayer.Name then
                -- Set farm warp position
                WarpPositions.Farm = Farm:GetPivot() * CFrame.new(0, 5, 0)
                return Farm
            end
        end
    end
end

local function GetOwnedSeeds()
    local seeds = {}
    local Character = LocalPlayer.Character
    
    for _, tool in pairs(Backpack:GetChildren()) do
        local plantName = tool:FindFirstChild("Plant_Name")
        local count = tool:FindFirstChild("Numbers")
        if plantName and count then
            seeds[plantName.Value] = {tool = tool, count = count.Value}
        end
    end
    
    if Character then
        for _, tool in pairs(Character:GetChildren()) do
            local plantName = tool:FindFirstChild("Plant_Name")
            local count = tool:FindFirstChild("Numbers")
            if plantName and count then
                seeds[plantName.Value] = {tool = tool, count = count.Value}
            end
        end
    end
    
    return seeds
end

local function GetCropCount()
    local count = 0
    local Character = LocalPlayer.Character
    
    for _, tool in pairs(Backpack:GetChildren()) do
        if tool:FindFirstChild("Item_String") then
            count = count + 1
        end
    end
    
    if Character then
        for _, tool in pairs(Character:GetChildren()) do
            if tool:FindFirstChild("Item_String") then
                count = count + 1
            end
        end
    end
    
    return count
end

local function GetHarvestableCrops()
    local myFarm = GetMyFarm()
    if not myFarm then return 0 end
    
    local plantsPhysical = myFarm.Important:FindFirstChild("Plants_Physical")
    if not plantsPhysical then return 0 end
    
    local count = 0
    local function countInFolder(folder)
        for _, plant in pairs(folder:GetChildren()) do
            local fruits = plant:FindFirstChild("Fruits")
            if fruits then
                countInFolder(fruits)
            end
            
            local prompt = plant:FindFirstChild("ProximityPrompt", true)
            if prompt and prompt.Enabled then
                count = count + 1
            end
        end
    end
    
    countInFolder(plantsPhysical)
    return count
end

local function IsBackpackFull()
    return GetCropCount() >= MAX_BACKPACK_SIZE
end

local function ShouldSell()
    local cropCount = GetCropCount()
    local harvestableCrops = GetHarvestableCrops()
    
    -- ‡∏Ç‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤
    return IsBackpackFull() or (harvestableCrops == 0 and cropCount >= MIN_CROPS_TO_SELL)
end

--// Enhanced Main Functions
local function BuySeeds()
    local bestSeed = GetBestSeed()
    local money = ShecklesCount.Value
    local ownedSeeds = GetOwnedSeeds()
    local currentSeedCount = ownedSeeds[bestSeed] and ownedSeeds[bestSeed].count or 0
    
    -- ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏ô‡πâ‡∏≠‡∏¢
    if currentSeedCount < 10 then
        local seedData
        for _, seed in pairs(SeedProgression) do
            if seed.name == bestSeed then
                seedData = seed
                break
            end
        end
        
        if seedData and money >= seedData.price then
            local canBuy = math.floor(money / seedData.price)
            local buyAmount = math.min(canBuy, 15) -- ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠
            
            StatusLabel.Text = "üõí Buying seeds..."
            
            for i = 1, buyAmount do
                GameEvents.BuySeedStock:FireServer(bestSeed)
                wait(0.1)
            end
            
            StatusLabel.Text = `‚úÖ Bought {buyAmount} {bestSeed}`
            wait(1)
        end
    end
end

local function SmartPlant()
    local myFarm = GetMyFarm()
    if not myFarm then return end
    
    local plantLocations = myFarm.Important:FindFirstChild("Plant_Locations")
    if not plantLocations then return end
    
    local farmLands = plantLocations:GetChildren()
    if #farmLands == 0 then return end
    
    local ownedSeeds = GetOwnedSeeds()
    local bestSeed = GetBestSeed()
    local seedData = ownedSeeds[bestSeed]
    
    if not seedData or seedData.count <= 0 then return end
    
    StatusLabel.Text = "üå± Smart planting..."
    
    -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏°
    if WarpPositions.Farm then
        SmoothWarp(WarpPositions.Farm)
    end
    
    -- Equip tool
    local Character = LocalPlayer.Character
    if Character and seedData.tool.Parent == Backpack then
        Character.Humanoid:EquipTool(seedData.tool)
        wait(0.5)
    end
    
    -- ‡∏õ‡∏•‡∏π‡∏Å‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
    local farmLand = farmLands[1]
    local center = farmLand:GetPivot()
    local size = farmLand.Size
    
    local plantCount = math.min(seedData.count, 12)
    local spacing = 4 -- ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡∏û‡∏∑‡∏ä
    
    for i = 1, plantCount do
        -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏¥‡∏î
        local row = math.floor((i - 1) / 4)
        local col = (i - 1) % 4
        
        local x = center.X + (col - 1.5) * spacing
        local z = center.Z + (row - 1.5) * spacing
        local position = Vector3.new(x, 0.13, z)
        
        -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°
        if math.abs(x - center.X) <= size.X/2 and math.abs(z - center.Z) <= size.Z/2 then
            GameEvents.Plant_RE:FireServer(position, bestSeed)
            wait(0.3)
        end
    end
    
    StatusLabel.Text = `‚úÖ Planted {plantCount} {bestSeed}`
end

local function SmartHarvest()
    local myFarm = GetMyFarm()
    if not myFarm then return end
    
    local plantsPhysical = myFarm.Important:FindFirstChild("Plants_Physical")
    if not plantsPhysical then return end
    
    StatusLabel.Text = "üåæ Harvesting crops..."
    
    -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏°
    if WarpPositions.Farm then
        SmoothWarp(WarpPositions.Farm)
    end
    
    local harvestedCount = 0
    local targets = {}
    
    -- ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    local function collectTargets(folder)
        for _, plant in pairs(folder:GetChildren()) do
            local fruits = plant:FindFirstChild("Fruits")
            if fruits then
                collectTargets(fruits)
            end
            
            local prompt = plant:FindFirstChild("ProximityPrompt", true)
            if prompt and prompt.Enabled then
                table.insert(targets, {plant = plant, prompt = prompt})
            end
        end
    end
    
    collectTargets(plantsPhysical)
    
    -- ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
    for _, target in pairs(targets) do
        if IsBackpackFull() then
            break
        end
        
        local plant = target.plant
        local prompt = target.prompt
        
        -- ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡πÉ‡∏Å‡∏•‡πâ‡∏û‡∏∑‡∏ä
        local Character = LocalPlayer.Character
        if Character and Character:FindFirstChild("HumanoidRootPart") then
            local plantPos = plant:GetPivot().Position
            Character.HumanoidRootPart.CFrame = CFrame.new(plantPos + Vector3.new(0, 3, 0))
            wait(0.2)
        end
        
        -- ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß
        if prompt.Enabled then
            fireproximityprompt(prompt)
            harvestedCount = harvestedCount + 1
            wait(0.1)
        end
    end
    
    if harvestedCount > 0 then
        StatusLabel.Text = `‚úÖ Harvested {harvestedCount} crops`
    else
        StatusLabel.Text = "‚è≥ No crops ready"
    end
end

local function SmartSell()
    local cropCount = GetCropCount()
    if cropCount < MIN_CROPS_TO_SELL then return end
    
    StatusLabel.Text = "üí∞ Selling crops..."
    
    local previousMoney = ShecklesCount.Value
    
    -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡∏Ç‡∏≤‡∏¢
    SmoothWarp(WarpPositions.Sell)
    
    -- ‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à
    local attempts = 0
    local maxAttempts = 20
    
    while attempts < maxAttempts and GetCropCount() > 0 do
        GameEvents.Sell_Inventory:FireServer()
        wait(0.3)
        attempts = attempts + 1
        
        -- ‡∏´‡∏¢‡∏∏‡∏î‡∏ñ‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô (‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
        if ShecklesCount.Value > previousMoney then
            break
        end
    end
    
    local profit = ShecklesCount.Value - previousMoney
    if profit > 0 then
        StatusLabel.Text = `üí∞ Sold! +$${profit}`
    else
        StatusLabel.Text = "‚ùå Sell failed"
    end
    
    wait(1)
end

--// Enhanced Auto Loop
local function EnhancedAutoLoop()
    while AutoEnabled do
        pcall(function()
            -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            local money = ShecklesCount.Value
            local crops = GetCropCount()
            local harvestableCrops = GetHarvestableCrops()
            
            InfoLabel.Text = `üí∞ $${money} | üì¶ ${crops} crops | üåæ ${harvestableCrops} ready`
            
            -- 1. ‡∏Ç‡∏≤‡∏¢‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
            if ShouldSell() then
                SmartSell()
                wait(2)
            end
            
            -- 2. ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå
            if money >= 50 then
                BuySeeds()
                wait(1)
            end
            
            -- 3. ‡∏õ‡∏•‡∏π‡∏Å‡∏û‡∏∑‡∏ä
            SmartPlant()
            wait(2)
            
            -- 4. ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß
            SmartHarvest()
            wait(2)
            
            -- 5. ‡∏û‡∏±‡∏Å‡∏™‡∏±‡πâ‡∏ô‡πÜ
            StatusLabel.Text = "‚è≥ Waiting..."
            wait(3)
        end)
    end
end

--// Button Functions
local function ToggleAuto()
    AutoEnabled = not AutoEnabled
    
    if AutoEnabled then
        ToggleButton.Text = "üõë STOP AUTO"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(244, 67, 54)
        StatusLabel.Text = "üöÄ Enhanced auto-farm started!"
        
        -- Start the enhanced auto loop
        coroutine.wrap(EnhancedAutoLoop)()
    else
        ToggleButton.Text = "üöÄ START ENHANCED AUTO"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(46, 125, 50)
        StatusLabel.Text = "‚èπÔ∏è Auto-farm stopped!"
    end
end

--// Connect Events
ToggleButton.MouseButton1Click:Connect(ToggleAuto)

-- Draggable GUI
local dragging = false
local dragStart = nil
local startPos = nil

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        shadow.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X + 2, startPos.Y.Scale, startPos.Y.Offset + delta.Y + 2)
    end
end)

MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Status updater
coroutine.wrap(function()
    while wait(1) do
        if not AutoEnabled then
            local money = ShecklesCount.Value
            local crops = GetCropCount()
            local harvestableCrops = GetHarvestableCrops()
            InfoLabel.Text = `üí∞ $${money} | üì¶ ${crops} crops | üåæ ${harvestableCrops} ready`
        end
    end
end)()

-- Auto-start for new players
if ShecklesCount.Value <= 50 then
    wait(3)
    StatusLabel.Text = "üÜï New player detected!"
    wait(2)
    ToggleAuto()
end

print("üåü Enhanced Auto-Farm loaded successfully!")
print("‚ú® Features: Smart warp, auto-sell when needed, improved planting!")
print("üéÆ Click the button to start enhanced farming!")
