--[[
    @author Grow a Garden - Auto to 300 Tomatoes (v2)
    @description Auto-farm from scratch until you have 300 Tomato crops grown
]]

-- Wait for game to load completely before doing anything
task.wait(3)

-- Initialize services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

if not LocalPlayer then return end
if not LocalPlayer.Character then LocalPlayer.CharacterAdded:Wait() end

-- Wait for leaderstats
local function WaitForLeaderstats()
    local stats = LocalPlayer:FindFirstChild("leaderstats")
    local tries = 0
    while not stats and tries < 30 do
        stats = LocalPlayer:FindFirstChild("leaderstats")
        tries += 1
        task.wait(1)
    end
    return stats
end

local Leaderstats = WaitForLeaderstats()
if not Leaderstats then print("❌ No leaderstats") return end

-- Find Sheckles
local Sheckles = Leaderstats:FindFirstChild("Sheckles") or Leaderstats:FindFirstChild("Money")
if not Sheckles then print("❌ No money stat") return end

-- GameEvents detection
local GameEvents = nil
for _, name in {"GameEvents", "Events", "Remotes", "RE", "ServerEvents"} do
    local folder = ReplicatedStorage:FindFirstChild(name)
    if folder then GameEvents = folder break end
end
if not GameEvents then print("❌ No GameEvents folder found") return end

print("📦 GameEvents folder: " .. GameEvents.Name)

-- Get My Farm
local function GetMyFarm()
    for _, farm in Workspace:GetChildren() do
        if farm:FindFirstChild("Important") then
            local data = farm.Important:FindFirstChild("Data")
            if data and data:FindFirstChild("Owner") and data.Owner.Value == LocalPlayer.Name then
                return farm
            end
        end
    end
    return nil
end

-- Try buy seed and return success
local function TryBuySeed(seedName)
    for _, evt in {"BuySeed", "BuySeedStock", "BuySeeds", "PurchaseSeed"} do
        local event = GameEvents:FindFirstChild(evt)
        if event then
            local success = pcall(function()
                print("🛒 Buying seed: " .. seedName .. " via " .. evt)
                event:FireServer(seedName)
            end)
            if success then return true end
        end
    end
    return false
end

-- Farming Functions
local function PlantSeed(seedName)
    local farm = GetMyFarm()
    if not farm then print("⚠️ No farm found") return end
    local pos = farm:GetPivot().Position + Vector3.new(0, 0.13, 0)
    for _, evt in {"PlantSeed", "Plant", "Plant_RE"} do
        local event = GameEvents:FindFirstChild(evt)
        if event then
            print("🌱 Planting " .. seedName .. " via " .. evt)
            event:FireServer(Vector3.new(pos.X, pos.Y, pos.Z), seedName)
            break
        end
    end
end

local function Harvest()
    local farm = GetMyFarm()
    if not farm then return end
    local plants = farm.Important:FindFirstChild("Plants_Physical")
    if not plants then return end
    local count = 0
    for _, crop in pairs(plants:GetChildren()) do
        local prompt = crop:FindFirstChildWhichIsA("ProximityPrompt", true)
        if prompt and prompt.Enabled then
            fireproximityprompt(prompt)
            task.wait(0.1)
            count += 1
        end
    end
    print("🌾 Harvested " .. count .. " crops")
end

local function Sell()
    local sellPos = CFrame.new(62, 4, -26)
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = sellPos
        task.wait(1)
    end
    for _, evt in {"SellInventory", "SellAll", "Sell", "Sell_Inventory"} do
        local event = GameEvents:FindFirstChild(evt)
        if event then
            print("💰 Selling crops via " .. evt)
            event:FireServer()
            break
        end
    end
end

-- Count tomato plants
local function CountTomato()
    local farm = GetMyFarm()
    if not farm then return 0 end
    local count = 0
    local plants = farm.Important:FindFirstChild("Plants_Physical")
    if plants then
        for _, crop in pairs(plants:GetChildren()) do
            if crop.Name == "Tomato" then
                count += 1
            end
        end
    end
    return count
end

-- Main Loop
local function FarmToTomato300()
    print("🚀 Starting Auto-Farm to 300 Tomatoes...")
    while true do
        local tomatoes = CountTomato()
        print("🍅 Tomato Count: " .. tomatoes)
        if tomatoes >= 300 then
            print("✅ Reached 300 Tomato plants!")
            break
        end

        local seedToUse = "Tomato"
        if Sheckles.Value < 30 or not TryBuySeed("Tomato") then
            print("🔄 Tomato unavailable or low money, using Carrot...")
            seedToUse = "Carrot"
            TryBuySeed("Carrot")
        end

        task.wait(1)
        PlantSeed(seedToUse)
        task.wait(1)
        Harvest()
        task.wait(1)
        Sell()
        task.wait(2)
    end
end

FarmToTomato300()
